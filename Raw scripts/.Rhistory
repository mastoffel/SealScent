factors <- res[[8]]
library(plyr)
source("summarySE.R")
newrelate <- relate.df[order(relate.df$relatedness), ]
equgroups <- rep(1:10, rep(82,10))
newrelate$groups <- equgroups
t <- summarySE(newrelate, measurevar = "F1", groupvars = "groups")
ggplot(t, aes(x = 1:10,y = F1)) +
theme_bw(base_size=20) +
geom_point( fill = "black", size=5) +
geom_errorbar(aes(ymin=F1-se, ymax=F1+se), width=.1) +
xlab("relatedness class") +
ggtitle("equal sized groups") +
scale_x_continuous(breaks=c(seq(from=1, to = 10, by =1)))
View(newrelate)
library(dplyr)
newr <- order(newrelate, group, relatedness)
newr <- order(newrelate, groups, relatedness)
newr <- order(newrelate, c(groups, relatedness)
)
?order
?arrange
newr <- arrange(newrelate, groups, relatedness)
View(newr)
newr$relatedness[1]
newr$relatedness[82]
newr$relatedness[83]
newr$relatedness[164]
for (i in 1:9) {
start <- newr$relatedness[i * 82]
}
start
start <- newr$relatedness[1]
for (i in 1:9) {
start <- append(start, newr$relatedness[i * 82])
}
start
start <- newr$relatedness[1]
stop1 <- vector()
for (i in 1:9) {
start <- append(start, newr$relatedness[i * 82 + 1])
stop1 <- append(stop1, newr$relatedness[i * 82])
}
dfclass <- data.frame("start" = start, "stop" = stop1)
1 != 10
1 != 1
start <- newr$relatedness[1]
stop1 <- vector()
for (i in 1:10) {
if (i != 10) {
start <- append(start, newr$relatedness[i * 82 + 1])
}
stop1 <- append(stop1, newr$relatedness[i * 82])
}
dfclass <- data.frame("start" = start, "stop" = stop1)
View(dfclass)
write.xlsx(relclass, "dfclass.xlsx")
library(xlsx)
write.xlsx(relclass, "dfclass.xlsx")
write.xlsx(dfclass, "relclass.xlsx")
names(dfclass)
library(ecodist)
?mantel
View(results.het)
View(het.df)
View(relate.df)
mantel_mums <- mantel(relatedness ~ F1 + F2 + F3 + F4)
mantel_mums <- mantel(relatedness ~ F1 + F2 + F3 + F4, data = relate.df)
mantel_mums
source("ScentResults.R")
res <- ScentResults("pups","fa", beach=0)
# subset results list output
relate.df <- res[[1]]
results.relatedness <- res[[2]]
relate.list <- res[[3]]
relatedness <- res[[4]]
het.df <- res[[5]]
results.het <- res[[6]]
scores <- res[[7]]
factors <- res[[8]]
mantel_pups <- mantel(relatedness ~ F1 + F2 + F3 + F4, data = relate.df)
mantel_pups
View(results.relatedness)
View(results.relatedness)
library(ecodist)
source("ScentResults.R")
res <- ScentResults("mums","fa", beach=0)
# subset results list output
relate.df <- res[[1]]
results.relatedness <- res[[2]]
relate.list <- res[[3]]
relatedness <- res[[4]]
het.df <- res[[5]]
results.het <- res[[6]]
scores <- res[[7]]
factors <- res[[8]]
setwd("C:/Users/Martin/Studium/MSc.Behaviour/Research/Seal Scent/R code/Raw scripts")
source("ScentResults.R")
res <- ScentResults("pups","fa", beach=0)
# subset results list output
relate.df <- res[[1]]
results.relatedness <- res[[2]]
relate.list <- res[[3]]
relatedness <- res[[4]]
het.df <- res[[5]]
results.het <- res[[6]]
scores <- res[[7]]
factors <- res[[8]]
library(vegan)
source("ScentResults.R")
res <- ScentResults("pups","fa", beach=0)
# subset results list output
relate.df <- res[[1]]
results.relatedness <- res[[2]]
relate.list <- res[[3]]
relatedness <- res[[4]]
het.df <- res[[5]]
results.het <- res[[6]]
scores <- res[[7]]
factors <- res[[8]]
library("ecodist", lib.loc="~/R/win-library/3.1")
detach("package:ecodist", unload=TRUE)
source("ScentResults.R")
res <- ScentResults("mums","fa", beach=0)
# subset results list output
relate.df <- res[[1]]
results.relatedness <- res[[2]]
relate.list <- res[[3]]
relatedness <- res[[4]]
het.df <- res[[5]]
results.het <- res[[6]]
scores <- res[[7]]
factors <- res[[8]]
relate.df.mums <- res[[1]]
res <- ScentResults("pups","fa", beach=0)
relate.df.pups <- res[[1]]
res <- ScentResults("mums","fa", beach=1)
relate.df.mums.1 <- res[[1]]
res <- ScentResults("mums","fa", beach=2)
relate.df.mums.2 <- res[[1]]
mantel_mums <- mantel(relatedness ~ F1 + F2 + F3 + F4, data = relate.df.mums)
mantel_pups <- mantel(relatedness ~ F1 + F2 + F3 + F4, data = relate.df.pups)
library(ecodist)
mantel_mums <- mantel(relatedness ~ F1 + F2 + F3 + F4, data = relate.df.mums)
mantel_pups <- mantel(relatedness ~ F1 + F2 + F3 + F4, data = relate.df.pups)
mantel_mums
mantel_pups
mantel_mums_B1 <- mantel(relatedness ~ F1 + F2 + F3 + F4, data = relate.df.mums.1)
mantel_mums_B2 <- mantel(relatedness ~ F1 + F2 + F3 + F4, data = relate.df.mums.2)
mantel_mums_B1
mantel_mums_B2
mantel_mums_B1 <- mantel(relatedness ~ F1 + F2 + F3 + F4, data = relate.df.mums.1)
mantel_mums_B1
mantel_mums_B1 <- mantel(relatedness ~ F1 + F2 + F3 + F4, data = relate.df.mums.1)
mantel_mums_B1
View(results.het)
table(factors$Beach)
View(factors)
mantel_mums <- mantel(relatedness ~ F2 + F1 + F3 + F4, data = relate.df.mums)
mantel_mums
mantel_mums <- mantel(relatedness ~ F3 + F2 + F3 + F4, data = relate.df.mums)
mantel_mums
mantel_mums <- mantel(relatedness ~ F4 + F1 + F3 + F4, data = relate.df.mums)
mantel_mums
scent.fa <- factor.pa.ginv(scent.abundance, nfactors = 4, prerotate=T,
rotate = "promax", scores = T, m=4)
pa1 <- c(4,15,19,46,63,90,109,115,134,136,151,156,186,187,190,193)
pa2 <- c(2,4,12,15,19,20,22,46,63,75,90,109,134,136,150,151,154,156,186,187,193)
pa3 <- c(4,12,15,19,46,47,63,90,93,109,114,136,150,151,156,187,193)
intersect.pa <- Reduce(intersect, list(pa1, pa2, pa3))
intersect.pa
pa1 <- c(4,15,19,46,63,90,109,115,134,136,151,156,186,187,190,193)
pa2 <- c(2,4,12,15,19,20,22,46,63,75,90,109,134,136,150,151,154,156,186,187,193)
pa3 <- c(4,12,15,19,46,47,63,90,93,109,114,136,150,151,156,187,193)
intersect.pa <- Reduce(intersect, list(pa1, pa2, pa3))
scent.abundance <- as.data.frame(t(read.csv(".\\csv_files\\scent abundances.csv",row.names=1)))
library(HDMD)
scent.fa <- factor.pa.ginv(scent.abundance, nfactors = 4, prerotate=T,
rotate = "promax", scores = T, m=4)
load    <- scent.fa$loadings
loadF1 <- load[, 1]
loaddf <- as.data.frame(load)
loaddf <- as.data.frame(as.matrix(load))
load
load[1,2]
loaddf <- as.data.frame(load[, 1:4])
names(load)
load
View(scent.abundance)
names(loaddf) <- names(scent.abundance)
names(scent.abundance)
row.names(loaddf) <- names(scent.abundance)
View(loaddf)
loaddf[intersect.pa, ] <- 1
View(loaddf)
intersect.pa
loaddf$best <- 0
loaddf$best[intersect.pa] <- 1
View(loaddf)
load    <- scent.fa$loadings
loaddf <- as.data.frame(load[, 1:4])
row.names(loaddf) <- names(scent.abundance)
# factor: 1 for best results compound (--> relatedness)
loaddf$best <- 0
View(loaddf)
loaddf$best[intersect.pa] <- 1
View(loaddf)
library(ggplot2)
ggplot(data=loaddf, aes(y = 1:213, x = F1, alpha = best)) +
geom_point(size = 4) +
theme_minimal(base_size=16)
loaddfsort <- arrange[loaddf, F1]
View(loaddf)
library(dplyr)
loaddfsort <- arrange[loaddf, F1]
loaddfsort <- arrange(loaddf, F1)
ggplot(data=loaddf, aes(y = 1:213, x = F1, alpha = best)) +
geom_point(size = 4) +
theme_minimal(base_size=16)
ggplot(data=loaddfsort, aes(y = 1:213, x = F1, alpha = best)) +
geom_point(size = 4) +
theme_minimal(base_size=16)
loaddfsort <- arrange(loaddf, F2)
ggplot(data=loaddfsort, aes(y = 1:213, x = F2, alpha = best)) +
geom_point(size = 4) +
theme_minimal(base_size=16)
loaddfsort <- arrange(loaddf, F3)
ggplot(data=loaddfsort, aes(y = 1:213, x = F3, alpha = best)) +
geom_point(size = 4) +
theme_minimal(base_size=16)
loaddfsort <- arrange(loaddf, F4)
library(ggplot2)
ggplot(data=loaddfsort, aes(y = 1:213, x = F4, alpha = best)) +
geom_point(size = 4) +
theme_minimal(base_size=16)
loaddf$beach <- 0
library(vegan)
# load
# already standardized and transformed, transposed abundance matrix
scent.abundance <- as.data.frame(t(read.csv(".\\csv_files\\scent abundances.csv",row.names=1)))
# 6 different diversity indices (from primer)
scent.diversity <- read.csv(".\\csv_files\\scent diversity.csv",row.names=1)
# relatedness matrix
relatedness <- read.csv(".\\csv_files\\relatedness_41loci.csv",row.names=1)
# heterozygosity vector SH
heterozygosity <- read.csv(".\\csv_files\\heterozygosity_41loci.csv", row.names=1)
# beach and family vector
factors <- read.csv(".\\csv_files\\factors.csv",row.names=1)
# get beach factor for simper
beach <- as.factor(factors$Beach)
## average dissimilarity
simp <- simper(scent.abundance, beach)
best30 <- summary(simp)[[1]]
best30
elemind <- element_indices(best30)
source("element_indices.R")
## element indices
elemind <- element_indices(best30)
elemind
elemnames <- rownames(best30)[1:30]
elemnames
loaddf$beach[elemnames] <- 1
elemnames
loaddf[elemnames]
loaddf[elemnames, ]
loaddf$beach
loaddf[elemnames, 6] <- 1
View(loaddf)
loaddfsort <- arrange(loaddf, beach)
ggplot(data=loaddfsort, aes(y = 1:213, x = F1, alpha = beach)) +
geom_point(size = 4) +
theme_minimal(base_size=16)
View(loaddf)
loaddfsort <- arrange(loaddf, F1)
ggplot(data=loaddfsort, aes(y = 1:213, x = F1, alpha = beach)) +
geom_point(size = 4) +
theme_minimal(base_size=16)
ggplot(data=loaddfsort, aes(y = 1:213, x = F2, alpha = beach)) +
geom_point(size = 4) +
theme_minimal(base_size=16)
loaddfsort <- arrange(loaddf, F2)
ggplot(data=loaddfsort, aes(y = 1:213, x = F2, alpha = beach)) +
geom_point(size = 4) +
theme_minimal(base_size=16)
loaddfsort <- arrange(loaddf, F3)
ggplot(data=loaddfsort, aes(y = 1:213, x = F3, alpha = beach)) +
geom_point(size = 4) +
theme_minimal(base_size=16)
loaddfsort <- arrange(loaddf, F4)
library(ggplot2)
ggplot(data=loaddfsort, aes(y = 1:213, x = F4, alpha = beach)) +
geom_point(size = 4) +
theme_minimal(base_size=16)
View(loaddfsort)
loaddfsort <- arrange(loaddf, F1)
View(loaddfsort)
loaddfsort <- arrange(loaddf, F1)
ggplot(data=loaddfsort, aes(y = 1:213, x = F1, alpha = beach)) +
geom_point(size = 4) +
theme_minimal(base_size=16)
ggplot(data=loaddfsort, aes(y = 1:213, x = F1, alpha = best)) +
geom_point(size = 4) +
theme_minimal(base_size=16)
loaddfsort <- arrange(loaddf, F2)
loaddfsort <- arrange(loaddf, F2)
ggplot(data=loaddfsort, aes(y = 1:213, x = F2, alpha = best)) +
geom_point(size = 4) +
theme_minimal(base_size=16)
loaddfsort <- arrange(loaddf, F4)
ggplot(data=loaddfsort, aes(y = 1:213, x = F2, alpha = best)) +
geom_point(size = 4) +
theme_minimal(base_size=16)
ggplot(data=loaddfsort, aes(y = 1:213, x = F4, alpha = best)) +
geom_point(size = 4) +
theme_minimal(base_size=16)
ggplot(data=loaddfsort, aes(y = 1:213, x = F4, alpha = beach)) +
geom_point(size = 4) +
theme_minimal(base_size=16)
View(loaddfsort)
View(scent.abundance)
2>=1
2=>1
scent.abundance[, 1] >= 0
View(scent.abundance)
scent.abundance[, 1] > 0
sum(scent.abundance[, 1] > 0)
occ <- apply(scent.abundance, 2, function(x) out <- sum(x >= 0))
sum(scent.abundance[, 1] > 0)
occ
occ <- apply(scent.abundance, 2, function(x) out <- sum(x > 0))
occ
View(scent.abundance)
loaddf$occ <- occ
library(ggplot2)
ggplot(data=loaddfsort, aes(y = 1:213, x = F4, alpha = beach, size = occ)) +
geom_point(size = 4) +
theme_minimal(base_size=16)
ggplot(data=loaddfsort, aes(y = 1:213, x = F4, alpha = beach)) +
geom_point(aes(size = occ)) +
theme_minimal(base_size=16)
loaddfsort <- arrange(loaddf, F1)
ggplot(data=loaddfsort, aes(y = 1:213, x = F1, alpha = best)) +
geom_point(aes(size = occ)) +
theme_minimal(base_size=16)
loaddfsort <- arrange(loaddf, F2)
ggplot(data=loaddfsort, aes(y = 1:213, x = F2, alpha = best)) +
geom_point(aes(size = occ)) +
theme_minimal(base_size=16)
ggplot(data=loaddfsort, aes(y = 1:213, x = F2, alpha = best)) +
geom_point(aes(shape = occ)) +
theme_minimal(base_size=16)
ggplot(data=loaddfsort, aes(y = 1:213, x = F2, alpha = best)) +
geom_point(aes(size = occ)) +
theme_minimal(base_size=16)
ggplot(data=loaddfsort, aes(y = 1:213, x = F2)) +
geom_point(aes(size = occ, shape = best)) +
theme_minimal(base_size=16)
ggplot(data=loaddfsort, aes(y = 1:213, x = F2)) +
geom_point(aes(size = occ, shape = as.factor(best))) +
theme_minimal(base_size=16)
ggplot(data=loaddfsort, aes(y = 1:213, x = F2)) +
geom_point(aes(size = occ, color = as.factor(best))) +
theme_minimal(base_size=16)
View(loaddf)
scent.fa <- factor.pa.ginv(scent.abundance[1:41], nfactors = 4, prerotate=T,
rotate = "promax", scores = T, m=4)
load    <- scent.fa$loadings
loaddf <- as.data.frame(load[, 1:4])
row.names(loaddf) <- names(scent.abundance)
# factor: 1 for best results compound (--> relatedness)
library(dplyr)
loaddf$best <- 0
loaddf$beach <- 0
loaddf[elemnames, 6] <- 1
loaddf$best[intersect.pa] <- 1
loaddfsort <- arrange(loaddf, F2)
# adding rank factor for number of occurences
occ <- apply(scent.abundance, 2, function(x) out <- sum(x > 0))
loaddf$occ <- occ
library(ggplot2)
ggplot(data=loaddfsort, aes(y = 1:213, x = F2)) +
geom_point(aes(size = occ, color = as.factor(best))) +
theme_minimal(base_size=16)
loaddfsort <- arrange(loaddf, F2)
View(loaddfsort)
data <- readLines(("C://Users//Martin//Studium//MSc.Behaviour//Research//Seal Scent//R code//data//beachpa.txt", header = TRUE))
data <- read.table(("C://Users//Martin//Studium//MSc.Behaviour//Research//Seal Scent//R code//data//beachpa.txt", header = TRUE))
data <- read.table("C://Users//Martin//Studium//MSc.Behaviour//Research//Seal Scent//R code//data//beachpa.txt" , header = TRUE)
View(data)
data <- read.table("C://Users//Martin//Studium//MSc.Behaviour//Research//Seal Scent//R code//data//beachpa.txt" , header = F, rownames=F)
?read.table
data <- read.table("C://Users//Martin//Studium//MSc.Behaviour//Research//Seal Scent//R code//data//beachpa.txt" , header = F, row.names=F)
data <- read.table("C://Users//Martin//Studium//MSc.Behaviour//Research//Seal Scent//R code//data//beachpa.txt" , header = T, row.names=F)
data <- read.table("C://Users//Martin//Studium//MSc.Behaviour//Research//Seal Scent//R code//data//beachpa.txt" , header = T, row.names=0)
View(data)
View(data)
data <- read.table("C://Users//Martin//Studium//MSc.Behaviour//Research//Seal Scent//R code//data//beachpa.txt" , header = T, row.names=NULL)
View(data)
plot(data[, 1], data[, 2])
res <- ScentResults("all","fa", beach=0)
# subset results list output
relate.df <- res[[1]]
results.relatedness <- res[[2]]
relate.list <- res[[3]]
relatedness <- res[[4]]
het.df <- res[[5]]
results.het <- res[[6]]
scores <- res[[7]]
factors <- res[[8]]
source("ScentResults.R")
res <- ScentResults("all","fa", beach=0)
# subset results list output
relate.df <- res[[1]]
results.relatedness <- res[[2]]
relate.list <- res[[3]]
relatedness <- res[[4]]
het.df <- res[[5]]
results.het <- res[[6]]
scores <- res[[7]]
factors <- res[[8]]
detach("package:ecodist", unload=TRUE)
source("ScentResults.R")
res <- ScentResults("all","fa", beach=0)
# subset results list output
relate.df <- res[[1]]
results.relatedness <- res[[2]]
relate.list <- res[[3]]
relatedness <- res[[4]]
het.df <- res[[5]]
results.het <- res[[6]]
scores <- res[[7]]
factors <- res[[8]]
View(factors)
View(het.df)
scent.abundance <- as.data.frame(t(read.csv(".\\csv_files\\scent abundances.csv",row.names=1)))
occ <- apply(scent.abundance, 1, function(x) out <- sum(x > 0))
mean(occ)
occ
source("ScentResults.R")
res <- ScentResults("pups","fa", beach=0)
relate.df.pups <- res[[1]]
library(ecodist)
mantel_pups <- mantel(relatedness ~ F1 + F2 + F3 + F4, data = relate.df.pups)
mantel_pups <- mantel(relatedness ~ F2 + F1 + F3 + F4, data = relate.df.mums)
mantel_pups <- mantel(relatedness ~ F3 + F2 + F3 + F4, data = relate.df.mums)
mantel_pups <- mantel(relatedness ~ F4 + F1 + F3 + F4, data = relate.df.mums)
mantel_pups <- mantel(relatedness ~ F1 + F2 + F3 + F4, data = relate.df.pups)
mantel_pups <- mantel(relatedness ~ F2 + F1 + F3 + F4, data = relate.df.pups)
mantel_pups <- mantel(relatedness ~ F3 + F2 + F3 + F4, data = relate.df.pups)
mantel_pups <- mantel(relatedness ~ F4 + F1 + F3 + F4, data = relate.df.pups)
mantel_pups <- mantel(relatedness ~ F1 + F2 + F3 + F4, data = relate.df.pups)
mantel_pups
mantel_pups <- mantel(relatedness ~ F2 + F1 + F3 + F4, data = relate.df.pups)
mantel_pups
mantel_pups <- mantel(relatedness ~ F3 + F2 + F3 + F4, data = relate.df.pups)
mantel_pups
mantel_pups <- mantel(relatedness ~ F4 + F1 + F3 + F4, data = relate.df.pups)
mantel_pups
source("ScentResults.R")
res <- ScentResults("pups","fa", beach=0)
# subset results list output
relate.df <- res[[1]]
results.relatedness <- res[[2]]
relate.list <- res[[3]]
relatedness <- res[[4]]
het.df <- res[[5]]
results.het <- res[[6]]
scores <- res[[7]]
factors <- res[[8]]
library("ecodist", lib.loc="~/R/win-library/3.1")
detach("package:ecodist", unload=TRUE)
source("ScentResults.R")
res <- ScentResults("pups","fa", beach=0)
# subset results list output
relate.df <- res[[1]]
results.relatedness <- res[[2]]
relate.list <- res[[3]]
relatedness <- res[[4]]
het.df <- res[[5]]
results.het <- res[[6]]
scores <- res[[7]]
factors <- res[[8]]
View(results.relatedness)
plot(relate.df$relatedness, relate.df$F3)
plot(relate.df$F3, relate.df$relatedness)
source("ScentResults.R")
res <- ScentResults("pups","fa", beach=0)
# subset results list output
relate.df <- res[[1]]
results.relatedness <- res[[2]]
relate.list <- res[[3]]
relatedness <- res[[4]]
het.df <- res[[5]]
results.het <- res[[6]]
scores <- res[[7]]
factors <- res[[8]]
View(results.relatedness)
source("ScentResults.R")
res <- ScentResults("mums","fa", beach=0)
# subset results list output
relate.df <- res[[1]]
results.relatedness <- res[[2]]
relate.list <- res[[3]]
relatedness <- res[[4]]
het.df <- res[[5]]
results.het <- res[[6]]
scores <- res[[7]]
factors <- res[[8]]
View(results.relatedness)
cor(het.df)
cor(relate.df
)
